{"ast":null,"code":"var _jsxFileName = \"/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Hello } from \"./components/hello/hello\";\n\nfunction App() {\n  const [clicked, setClicked] = useState();\n  const [nameChange, setNameChange] = useState();\n  const [log, setLog] = useState(\"Log in\");\n  const [username, setUserName] = useState(\"Sanzhar\");\n  const initialFormData = Object.freeze({\n    username: \"\",\n    picture: \"\",\n    link: \"\"\n  });\n  const [formData, updateFormData] = React.useState(initialFormData);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(formData);\n    setUserName(formData.username);\n  };\n\n  const btnClickLoginHandler = val => {\n    console.log(\"Log in clicked\");\n    setClicked(val);\n    setLog(log === \"Log in\" ? \"Log out\" : \"Log in\");\n  };\n\n  const btnClickNameHandler = () => {\n    console.log(\"Change name clicked\");\n    setUserName(username);\n    setNameChange(true);\n  }; // Code block for input form\n\n\n  const inputHandler = /*#__PURE__*/React.createElement(\"form\", {\n    action: \"submit\",\n    className: \"inputForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    className: \"inputField\",\n    placeholder: \"Username\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn input-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Change\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, clicked && username ? /*#__PURE__*/React.createElement(Hello, {\n    name: username,\n    picture: \"https://via.placeholder.com/200x200.png\",\n    link: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn App-login-btn\",\n    onClick: () => btnClickLoginHandler(clicked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \" \", log), nameChange && !clicked ? inputHandler : clicked ? null : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn App-login-btn\",\n    onClick: btnClickNameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 67\n    }\n  }, \"Change name\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/App.tsx"],"names":["React","useState","Hello","App","clicked","setClicked","nameChange","setNameChange","log","setLog","username","setUserName","initialFormData","Object","freeze","picture","link","formData","updateFormData","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","console","btnClickLoginHandler","val","btnClickNameHandler","inputHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { Hello } from \"./components/hello/hello\"\n\nfunction App() {\n  const [clicked, setClicked] = useState<Boolean>();\n  const [nameChange, setNameChange] = useState<Boolean>();\n  const [log, setLog] = useState<String>(\"Log in\");\n  const [username, setUserName] = useState<String>(\"Sanzhar\");\n\n  const initialFormData = Object.freeze({\n    username: \"\",\n    picture: \"\",\n    link: \"\"\n  });\n\n  const [formData, updateFormData] = React.useState(initialFormData);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    updateFormData({\n      ...formData,\n\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault()\n    console.log(formData);\n    setUserName(formData.username)\n  };\n\n  const btnClickLoginHandler = (val: boolean) => { \n    console.log(\"Log in clicked\") \n    setClicked(val);\n    setLog(log === \"Log in\" ? \"Log out\" : \"Log in\")\n  }\n\n  const btnClickNameHandler = () => { \n    console.log(\"Change name clicked\") \n    setUserName(username);\n    setNameChange(true);\n  }\n\n  // Code block for input form\n  const inputHandler = <form action=\"submit\" className=\"inputForm\" onSubmit = { handleSubmit }>\n                        <input type=\"text\" name=\"username\" className=\"inputField\" placeholder=\"Username\" onChange = {handleChange}></input>\n                        <button className=\"btn input-btn\">Change</button>\n                      </form>\n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"App-wrapper\">\n      \n        { clicked && username ? <Hello name={ username } picture={ \"https://via.placeholder.com/200x200.png\" } link={\"#\"}/> : null }\n        \n        <button className=\"btn App-login-btn\" onClick = { () => btnClickLoginHandler(clicked)}> { log }</button>\n        \n        { nameChange && !clicked? inputHandler : clicked ? null : <button className=\"btn App-login-btn\" onClick = { btnClickNameHandler }>Change name</button> }\n      \n      </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}