{"ast":null,"code":"var _jsxFileName = \"/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/pages/home/Home.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport './Home.scss';\nimport { Button } from \"../../components/Button/Button\";\nexport const Home = () => {\n  const [userInfo, setUserInfo] = useState(null);\n  const [userFormError, setUserFormError] = useState({\n    firstname: {},\n    lastname: {}\n  });\n\n  const changeHandler = (field, value) => {\n    const newVal = { ...userInfo,\n      [field]: value\n    };\n    setUserInfo(newVal);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(userInfo);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      return;\n    }\n\n    if (!userInfo.lastname) {\n      setUserFormError({ ...userFormError,\n        lastname: {\n          isEmpty: true\n        }\n      });\n      return;\n    }\n\n    setUserFormError({ ...userFormError,\n      lastname: {\n        isEmpty: true\n      }\n    });\n  }, [userInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstname\",\n    className: \"form-control\",\n    placeholder: \"Enter your first name\",\n    onChange: e => changeHandler('firstname', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, userFormError.firstname.isEmpty ? \"This field is required\" : '', userFormError.firstname.isInvalid ? \"Entered value is invalid\" : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"lastname\",\n    className: \"form-control\",\n    placeholder: \"Enter your last name\",\n    onChange: e => changeHandler('lastname', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, userFormError.lastname.isEmpty ? \"This field is required\" : '', userFormError.lastname.isInvalid ? \"Entered value is invalid\" : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'submit',\n    text: \"Log in\",\n    className: \"login-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/pages/home/Home.tsx"],"names":["React","useState","useEffect","Button","Home","userInfo","setUserInfo","userFormError","setUserFormError","firstname","lastname","changeHandler","field","value","newVal","submitHandler","e","preventDefault","console","log","isEmpty","target","isInvalid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,gCAAvB;AAWA,OAAO,MAAMC,IAA6B,GAAG,MAAM;AAE/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAgD,IAAhD,CAAxC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAgB;AAACQ,IAAAA,SAAS,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAhB,CAAlD;;AAEA,QAAMC,aAAa,GAAG,CAACC,KAAD,EAAkCC,KAAlC,KAAoD;AAEtE,UAAMC,MAAM,GAAG,EACX,GAAGT,QADQ;AAEX,OAACO,KAAD,GAASC;AAFE,KAAf;AAIAP,IAAAA,WAAW,CAACQ,MAAD,CAAX;AACH,GAPD;;AASA,QAAMC,aAAa,GAAIC,CAAD,IAAwB;AAC1CA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACD,GAHH;;AAKAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACG,QAAJ,EAAc;AACV;AACH;;AAED,QAAG,CAACA,QAAQ,CAACK,QAAb,EAAuB;AACnBF,MAAAA,gBAAgB,CAAC,EACb,GAAGD,aADU;AAEbG,QAAAA,QAAQ,EAAE;AACNU,UAAAA,OAAO,EAAE;AADH;AAFG,OAAD,CAAhB;AAMA;AACH;;AAEDZ,IAAAA,gBAAgB,CAAC,EACb,GAAGD,aADU;AAEbG,MAAAA,QAAQ,EAAE;AACNU,QAAAA,OAAO,EAAE;AADH;AAFG,KAAD,CAAhB;AAMH,GArBQ,EAqBN,CAACf,QAAD,CArBM,CAAT;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEU,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACQ,IAAA,IAAI,EAAC,WADb;AAEQ,IAAA,SAAS,EAAC,cAFlB;AAGQ,IAAA,WAAW,EAAC,uBAHpB;AAIQ,IAAA,QAAQ,EAAGC,CAAD,IAAOL,aAAa,CAAC,WAAD,EAAcK,CAAC,CAACK,MAAF,CAASR,KAAvB,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMN,aAAa,CAACE,SAAd,CAAwBW,OAAxB,GAAkC,wBAAlC,GAA6D,EADnE,EAEMb,aAAa,CAACE,SAAd,CAAwBa,SAAxB,GAAoC,0BAApC,GAAiE,EAFvE,CANJ,CADJ,eAYI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACQ,IAAA,IAAI,EAAC,UADb;AAEQ,IAAA,SAAS,EAAC,cAFlB;AAGQ,IAAA,WAAW,EAAC,sBAHpB;AAIQ,IAAA,QAAQ,EAAGN,CAAD,IAAOL,aAAa,CAAC,UAAD,EAAaK,CAAC,CAACK,MAAF,CAASR,KAAtB,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMN,aAAa,CAACG,QAAd,CAAuBU,OAAvB,GAAiC,wBAAjC,GAA4D,EADlE,EAEMb,aAAa,CAACG,QAAd,CAAuBY,SAAvB,GAAmC,0BAAnC,GAAgE,EAFtE,CANJ,CAZJ,eAwBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,SAAS,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAxBJ,CADJ,CADJ;AAgCH,CA1EM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Home.scss';\nimport { Button } from \"../../components/Button/Button\"\n\ninterface FormError {\n    isEmpty?: boolean,\n    isInvalid?: boolean\n}\ninterface UserFormError {\n    firstname: FormError,\n    lastname: FormError\n}\n\nexport const Home: React.FunctionComponent = () => {\n\n    const [userInfo, setUserInfo] = useState<{firstname: string; lastname: string;} | null>(null);\n    const [userFormError, setUserFormError] = useState<UserFormError>({firstname: {}, lastname: {}});\n\n    const changeHandler = (field: 'firstname' | 'lastname', value: string) => {\n        \n        const newVal = {\n            ...userInfo,\n            [field]: value\n        };\n        setUserInfo(newVal as any);\n    };\n\n    const submitHandler = (e: React.FormEvent) => {\n        e.preventDefault();\n        console.log(userInfo)\n      };\n\n    useEffect(() => {\n        if(!userInfo) {\n            return;\n        }\n\n        if(!userInfo.lastname) {\n            setUserFormError({\n                ...userFormError,\n                lastname: {\n                    isEmpty: true,\n                }\n            })\n            return;\n        }\n\n        setUserFormError({\n            ...userFormError,\n            lastname: {\n                isEmpty: true,\n            }\n        })\n    }, [userInfo]);\n\n    return (\n        <div className=\"Home\">\n            <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                    <input type=\"text\" \n                            name=\"firstname\" \n                            className='form-control' \n                            placeholder=\"Enter your first name\" \n                            onChange={(e) => changeHandler('firstname', e.target.value)}></input>\n                    <div className=\"form-error\">\n                        { userFormError.firstname.isEmpty ? \"This field is required\" : ''}\n                        { userFormError.firstname.isInvalid ? \"Entered value is invalid\" : ''}\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" \n                            name=\"lastname\" \n                            className='form-control' \n                            placeholder=\"Enter your last name\"\n                            onChange={(e) => changeHandler('lastname', e.target.value)}></input>\n                    <div className=\"form-error\">\n                        { userFormError.lastname.isEmpty ? \"This field is required\" : ''}\n                        { userFormError.lastname.isInvalid ? \"Entered value is invalid\" : ''}\n                    </div>\n                </div>\n\n                <div className=\"btn-wrapper\">\n                    <Button type={'submit'} text='Log in' className=\"login-btn\"/>\n                </div>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}