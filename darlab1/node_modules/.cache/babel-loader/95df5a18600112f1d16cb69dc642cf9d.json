{"ast":null,"code":"var _jsxFileName = \"/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/pages/home/Home.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport './Home.scss';\nimport { Button } from \"../../components/button/Button\";\nexport const Home = () => {\n  const [userInfo, setUserInfo] = useState(null);\n  const [userFormError, setUserFormError] = useState({\n    firstname: {},\n    lastname: {}\n  });\n\n  const changeHandler = (field, value) => {\n    const newVal = { ...userInfo,\n      [field]: value\n    };\n    setUserInfo(newVal);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(userInfo);\n  };\n\n  const checkField = field => {\n    if (!userInfo) {\n      return;\n    }\n\n    if (!userInfo[field]) {\n      setUserFormError({ ...userFormError,\n        [field]: {\n          isEmpty: true\n        }\n      });\n      return;\n    }\n\n    if (userInfo[field].match(/\\s/g)) {\n      setUserFormError({ ...userFormError,\n        [field]: {\n          isInvalid: true,\n          isEmpty: false\n        }\n      });\n      return;\n    }\n\n    setUserFormError({ ...userFormError,\n      [field]: {\n        isEmpty: false,\n        isInvalid: false\n      }\n    });\n  };\n\n  useEffect(() => {\n    checkField('firstname');\n  }, [userInfo === null || userInfo === void 0 ? void 0 : userInfo.firstname]);\n  useEffect(() => {\n    checkField('lastname');\n  }, [userInfo === null || userInfo === void 0 ? void 0 : userInfo.lastname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstname\",\n    className: \"form-control\",\n    placeholder: \"Enter your first name\",\n    onChange: e => changeHandler('firstname', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, userFormError.firstname.isEmpty ? \"This field is required\" : '', userFormError.firstname.isInvalid ? \"Entered value is invalid\" : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"lastname\",\n    className: \"form-control\",\n    placeholder: \"Enter your last name\",\n    onChange: e => changeHandler('lastname', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, userFormError.lastname.isEmpty ? \"This field is required\" : '', userFormError.lastname.isInvalid ? \"Entered value is invalid\" : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'submit',\n    text: \"Log in\",\n    className: \"login-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/pages/home/Home.tsx"],"names":["React","useState","useEffect","Button","Home","userInfo","setUserInfo","userFormError","setUserFormError","firstname","lastname","changeHandler","field","value","newVal","submitHandler","e","preventDefault","console","log","checkField","isEmpty","match","isInvalid","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Home.scss';\nimport { Button } from \"../../components/button/Button\"\n\ninterface FormError {\n    isEmpty?: boolean,\n    isInvalid?: boolean\n}\ninterface UserFormError {\n    firstname: FormError,\n    lastname: FormError\n}\n\nexport const Home: React.FunctionComponent = () => {\n\n    const [userInfo, setUserInfo] = useState<{firstname: string; lastname: string;} | null>(null);\n    const [userFormError, setUserFormError] = useState<UserFormError>({firstname: {}, lastname: {}});\n\n    const changeHandler = (field: 'firstname' | 'lastname', value: string) => {\n        \n        const newVal = {\n            ...userInfo,\n            [field]: value\n        };\n        setUserInfo(newVal as any);\n    };\n\n    const submitHandler = (e: React.FormEvent) => {\n        e.preventDefault();\n        console.log(userInfo)\n      };\n\n    const checkField = (field: 'firstname' | 'lastname') => {\n        if(!userInfo) {\n            return;\n        }\n\n        if(!userInfo[field]) {\n            setUserFormError({\n                ...userFormError,\n                [field]: {\n                    isEmpty: true,\n                }\n            })\n            return;\n        }\n\n        if(userInfo[field].match(/\\s/g)) {\n            setUserFormError({\n                ...userFormError,\n                [field]: {\n                    isInvalid: true,\n                    isEmpty: false\n                }\n            })\n            return;\n        }\n\n        setUserFormError({\n            ...userFormError,\n            [field]: {\n                isEmpty: false,\n                isInvalid: false\n            }\n        })\n    }\n\n    useEffect(() => {\n        checkField('firstname');\n    }, [userInfo?.firstname]);\n\n    useEffect(() => {\n        checkField('lastname');\n    }, [userInfo?.lastname]);\n\n    return (\n        <div className=\"Home\">\n            <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                    <input type=\"text\" \n                            name=\"firstname\" \n                            className='form-control' \n                            placeholder=\"Enter your first name\" \n                            onChange={(e) => changeHandler('firstname', e.target.value)}></input>\n                    <div className=\"form-error\">\n                        { userFormError.firstname.isEmpty ? \"This field is required\" : ''}\n                        { userFormError.firstname.isInvalid ? \"Entered value is invalid\" : ''}\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" \n                            name=\"lastname\" \n                            className='form-control' \n                            placeholder=\"Enter your last name\"\n                            onChange={(e) => changeHandler('lastname', e.target.value)}></input>\n                    <div className=\"form-error\">\n                        { userFormError.lastname.isEmpty ? \"This field is required\" : ''}\n                        { userFormError.lastname.isInvalid ? \"Entered value is invalid\" : ''}\n                    </div>\n                </div>\n\n                <div className=\"btn-wrapper\">\n                    <Button type={'submit'} text='Log in' className=\"login-btn\"/>\n                </div>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}