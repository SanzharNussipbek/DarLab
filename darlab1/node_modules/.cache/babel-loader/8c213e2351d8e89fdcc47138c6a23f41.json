{"ast":null,"code":"var _jsxFileName = \"/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/pages/chat/Chat.tsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { Button } from \"../../components/Button/Button\";\nimport { Input } from \"../../components/input/Input\";\nimport \"./Chat.scss\";\nimport { useWebSocket, chatStateReducer, ChatActions } from \"../../services/chat\";\nexport const Chat = ({\n  user\n}) => {\n  const [state, dispatch] = useReducer(chatStateReducer, {\n    messages: []\n  });\n  console.log(state);\n  const [message, setMessage] = useState('');\n  const socketClient = useWebSocket({\n    userId: user === null || user === void 0 ? void 0 : user.firstname\n  });\n\n  const messageHandler = value => {\n    setMessage(value);\n  };\n\n  const messageSubmit = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    socketClient.sendMessage(message);\n  };\n\n  const onMessage = ({\n    data\n  }) => {\n    console.log(data);\n    dispatch({\n      type: ChatActions.ADD_MESSAGE,\n      payload: data\n    });\n  };\n\n  useEffect(() => {\n    socketClient.eventEmitter.on('message', onMessage);\n    return () => {\n      socketClient.eventEmitter.off('message', onMessage);\n      socketClient.close();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Messages\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send-message-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: messageSubmit,\n    className: \"send-message-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"message\",\n    value: message,\n    required: false,\n    placeholder: \"Enter message\",\n    className: \"message-input\",\n    onChange: value => messageHandler(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Send\",\n    className: \"message-send-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/pages/chat/Chat.tsx"],"names":["React","useState","useEffect","useReducer","Button","Input","useWebSocket","chatStateReducer","ChatActions","Chat","user","state","dispatch","messages","console","log","message","setMessage","socketClient","userId","firstname","messageHandler","value","messageSubmit","e","preventDefault","sendMessage","onMessage","data","type","ADD_MESSAGE","payload","eventEmitter","on","off","close"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AAEA,OAAO,aAAP;AAEA,SAASC,YAAT,EAAuBC,gBAAvB,EAAyCC,WAAzC,QAA4D,qBAA5D;AAMA,OAAO,MAAMC,IAAoC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE5D,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACI,gBAAD,EAAmB;AAACM,IAAAA,QAAQ,EAAE;AAAX,GAAnB,CAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAS,EAAT,CAAtC;AAEA,QAAMiB,YAAY,GAAGZ,YAAY,CAAC;AAC9Ba,IAAAA,MAAM,EAAET,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU;AADgB,GAAD,CAAjC;;AAIA,QAAMC,cAAc,GAAIC,KAAD,IAAmB;AACtCL,IAAAA,UAAU,CAACK,KAAD,CAAV;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIC,CAAD,IAAwB;AAC1CA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAC,IAAAA,YAAY,CAACQ,WAAb,CAAyBV,OAAzB;AACH,GAJD;;AAMA,QAAMW,SAAS,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAA6B;AAC3Cd,IAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;AACAhB,IAAAA,QAAQ,CAAE;AACNiB,MAAAA,IAAI,EAAErB,WAAW,CAACsB,WADZ;AAENC,MAAAA,OAAO,EAAEH;AAFH,KAAF,CAAR;AAIH,GAND;;AAQA1B,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,YAAY,CAACc,YAAb,CAA0BC,EAA1B,CAA6B,SAA7B,EAAwCN,SAAxC;AAEA,WAAO,MAAM;AACTT,MAAAA,YAAY,CAACc,YAAb,CAA0BE,GAA1B,CAA8B,SAA9B,EAAyCP,SAAzC;AACAT,MAAAA,YAAY,CAACiB,KAAb;AACH,KAHD;AAIH,GAPQ,EAOP,EAPO,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEZ,aAAhB;AAA+B,IAAA,SAAS,EAAC,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEP,OAA7B;AAAsC,IAAA,QAAQ,EAAE,KAAhD;AAAuD,IAAA,WAAW,EAAC,eAAnE;AAAmF,IAAA,SAAS,EAAC,eAA7F;AAA6G,IAAA,QAAQ,EAAGM,KAAD,IAAUD,cAAc,CAACC,KAAD,CAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAC,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CALJ,CADJ;AAcH,CAnDM","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\nimport { Button } from \"../../components/Button/Button\"\nimport { Input } from \"../../components/input/Input\"\nimport { ChatMessage } from \"./chat-messages/ChatMessages\"\nimport \"./Chat.scss\"\nimport { UserInfo } from \"../../types/Interfaces\";\nimport { useWebSocket, chatStateReducer, ChatActions } from \"../../services/chat\"\n\ntype Props = {\n    user?: UserInfo | null;\n}\n\nexport const Chat: React.FunctionComponent<Props> = ({user}) => {\n\n    const[state, dispatch] = useReducer(chatStateReducer, {messages: []});\n    console.log(state)\n    const [message, setMessage] = useState<string>('');\n\n    const socketClient = useWebSocket({\n        userId: user?.firstname\n    })\n\n    const messageHandler = (value: string) => {\n        setMessage(value)\n    }\n\n    const messageSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        setMessage(\"\");\n        socketClient.sendMessage(message);\n    }\n\n    const onMessage = ({data} : {data: string}) => {\n        console.log(data);\n        dispatch ({\n            type: ChatActions.ADD_MESSAGE,\n            payload: data,\n        })\n    }\n\n    useEffect(() => {\n        socketClient.eventEmitter.on('message', onMessage);\n\n        return () => {\n            socketClient.eventEmitter.off('message', onMessage);\n            socketClient.close();\n        }\n    },[]);\n\n    return (\n        <div className=\"Chat\">\n            <div className=\"message-list-container\">\n                <h1>Messages</h1>\n            </div>\n\n            <div className=\"send-message-form-container\">\n                <form onSubmit={messageSubmit} className=\"send-message-form\">  \n                    <Input name=\"message\" value={message} required={false} placeholder=\"Enter message\" className=\"message-input\" onChange={(value)=> messageHandler(value)}/>\n                    <Button text=\"Send\" className=\"message-send-btn\"/>\n                </form>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}