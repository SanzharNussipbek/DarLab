{"ast":null,"code":"var _jsxFileName = \"/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/pages/room/Room.tsx\";\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./Room.scss\";\nimport { Chat } from \"../chat/Chat\";\nimport { RoomHeader } from \"../../components/roomHeader/RoomHeader\";\nimport { UserContext } from '../../services/context';\nimport YouTube from 'react-youtube';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { IconButton } from '@material-ui/core';\nimport PlayCircleFilledWhiteIcon from '@material-ui/icons/PlayCircleFilledWhite';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport StopIcon from '@material-ui/icons/Stop';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\nimport Forward10Icon from '@material-ui/icons/Forward10';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nvar PlayerPlayStates;\n\n(function (PlayerPlayStates) {\n  PlayerPlayStates[\"PLAYING\"] = \"PLAYING\";\n  PlayerPlayStates[\"PAUSED\"] = \"PAUSED\";\n})(PlayerPlayStates || (PlayerPlayStates = {}));\n\nvar PlayerMuteStates;\n\n(function (PlayerMuteStates) {\n  PlayerMuteStates[\"MUTED\"] = \"MUTED\";\n  PlayerMuteStates[\"UNMUTED\"] = \"UNMUTED\";\n})(PlayerMuteStates || (PlayerMuteStates = {}));\n\nexport const Room = () => {\n  const {\n    id\n  } = useParams();\n  const [player, setPlayer] = useState();\n  const [playerPlayState, setPlayerPlayState] = useState();\n  const [playerMuteState, setPlayerMuteState] = useState();\n\n  const onVideoInit = e => {\n    setPlayer(e.target);\n  };\n\n  const toggleVideo = () => {\n    // console.log(player);\n    if (playerPlayState !== PlayerPlayStates.PLAYING) {\n      player === null || player === void 0 ? void 0 : player.playVideo();\n      setPlayerPlayState(PlayerPlayStates.PLAYING);\n    } else if (playerPlayState === PlayerPlayStates.PLAYING) {\n      player === null || player === void 0 ? void 0 : player.pauseVideo();\n      setPlayerPlayState(PlayerPlayStates.PAUSED);\n    }\n  };\n\n  const skipBack = () => {\n    const time = player === null || player === void 0 ? void 0 : player.getCurrentTime();\n    player === null || player === void 0 ? void 0 : player.seekTo(time - 10);\n  };\n\n  const skipForward = () => {\n    const time = player === null || player === void 0 ? void 0 : player.getCurrentTime();\n    player === null || player === void 0 ? void 0 : player.seekTo(time + 10);\n  };\n\n  const stopVideo = () => {\n    player === null || player === void 0 ? void 0 : player.stopVideo();\n  };\n\n  const muteVideo = () => {\n    console.log(player);\n\n    if (playerMuteState !== PlayerMuteStates.MUTED) {\n      player === null || player === void 0 ? void 0 : player.mute();\n      setPlayerMuteState(PlayerMuteStates.MUTED);\n    } else if (playerMuteState === PlayerMuteStates.MUTED) {\n      player === null || player === void 0 ? void 0 : player.unMute();\n      setPlayerMuteState(PlayerMuteStates.UNMUTED);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RoomHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(YouTube, {\n    videoId: id,\n    containerClassName: \"video\",\n    onReady: onVideoInit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: player === null || player === void 0 ? void 0 : player.getVideoUrl(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FileCopyIcon, {\n    fontSize: \"large\",\n    style: {\n      color: green[500]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: muteVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, playerMuteState !== PlayerMuteStates.MUTED ? /*#__PURE__*/React.createElement(VolumeUpIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 76\n    }\n  }) : /*#__PURE__*/React.createElement(VolumeOffIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 111\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: skipBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SettingsBackupRestoreIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, playerPlayState !== PlayerPlayStates.PLAYING ? /*#__PURE__*/React.createElement(PlayCircleFilledWhiteIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 78\n    }\n  }) : /*#__PURE__*/React.createElement(PauseCircleFilledIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 126\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: skipForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Forward10Icon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: stopVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StopIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: player === null || player === void 0 ? void 0 : player.getVideoUrl(),\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(YouTubeIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, value => /*#__PURE__*/React.createElement(Chat, {\n    user: value === null || value === void 0 ? void 0 : value.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/nsanzhar_/Documents/GitHub/DarLab/darlab1/src/pages/room/Room.tsx"],"names":["React","useState","useParams","Chat","RoomHeader","UserContext","YouTube","CopyToClipboard","IconButton","PlayCircleFilledWhiteIcon","PauseCircleFilledIcon","VolumeOffIcon","VolumeUpIcon","StopIcon","SettingsBackupRestoreIcon","Forward10Icon","YouTubeIcon","FileCopyIcon","PlayerPlayStates","PlayerMuteStates","Room","id","player","setPlayer","playerPlayState","setPlayerPlayState","playerMuteState","setPlayerMuteState","onVideoInit","e","target","toggleVideo","PLAYING","playVideo","pauseVideo","PAUSED","skipBack","time","getCurrentTime","seekTo","skipForward","stopVideo","muteVideo","console","log","MUTED","mute","unMute","UNMUTED","getVideoUrl","color","green","value","user"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport \"./Room.scss\"\nimport { Chat } from \"../chat/Chat\"\nimport { RoomHeader } from \"../../components/roomHeader/RoomHeader\"\nimport { UserContext } from '../../services/context';\n\nimport YouTube from 'react-youtube'\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\nimport { IconButton } from '@material-ui/core';\nimport PlayCircleFilledWhiteIcon from '@material-ui/icons/PlayCircleFilledWhite';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport StopIcon from '@material-ui/icons/Stop';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\nimport Forward10Icon from '@material-ui/icons/Forward10';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nenum PlayerPlayStates {\n    PLAYING = 'PLAYING',\n    PAUSED = 'PAUSED',\n}\n\nenum PlayerMuteStates {\n    MUTED = 'MUTED',\n    UNMUTED = 'UNMUTED',\n}\n\nexport const Room: React.FunctionComponent = () => {\n\n    const { id } = useParams();\n\n    const [player, setPlayer] = useState<any>();\n\n    const [playerPlayState, setPlayerPlayState] = useState<PlayerPlayStates>();\n\n    const [playerMuteState, setPlayerMuteState] = useState<PlayerMuteStates>();\n\n    const onVideoInit = (e: {target: any}) => {\n        setPlayer(e.target);\n    }\n\n    const toggleVideo = () => {\n        // console.log(player);\n\n        if (playerPlayState !== PlayerPlayStates.PLAYING) {\n            player?.playVideo();\n            setPlayerPlayState(PlayerPlayStates.PLAYING);\n        } else if(playerPlayState === PlayerPlayStates.PLAYING) {\n            player?.pauseVideo();\n            setPlayerPlayState(PlayerPlayStates.PAUSED);\n        }\n    }\n\n    const skipBack = () => {\n        const time = player?.getCurrentTime();\n        player?.seekTo(time-10);\n    }\n\n    const skipForward = () => {\n        const time = player?.getCurrentTime();\n        player?.seekTo(time+10);\n    }\n\n    const stopVideo = () => {\n        player?.stopVideo();\n    }\n\n    const muteVideo = () => {\n        console.log(player);\n\n        if (playerMuteState !== PlayerMuteStates.MUTED) {\n            player?.mute();\n            setPlayerMuteState(PlayerMuteStates.MUTED);\n        } else if(playerMuteState === PlayerMuteStates.MUTED) {\n            player?.unMute();\n            setPlayerMuteState(PlayerMuteStates.UNMUTED);\n        }\n    }\n\n    return (\n        <div className=\"Room\">\n            <div className=\"room-header\">\n                <RoomHeader/>\n            </div>\n\n            <div className=\"room-body\">\n                <div className=\"video-wrapper\">\n                    <YouTube videoId={id} containerClassName=\"video\" onReady={onVideoInit}/>\n                    \n                    <div className=\"video-controls\">\n\n                        <CopyToClipboard text={player?.getVideoUrl()}>\n                            <IconButton>\n                                <FileCopyIcon fontSize='large' style={{ color: green[500] }}/>\n                            </IconButton>\n                        </CopyToClipboard>\n\n                        <IconButton onClick={muteVideo}>\n                            { playerMuteState !== PlayerMuteStates.MUTED ? <VolumeUpIcon fontSize='large'/> : <VolumeOffIcon fontSize='large'/>}\n                        </IconButton>\n\n                        <IconButton onClick={skipBack}>\n                            <SettingsBackupRestoreIcon fontSize='large'/>\n                        </IconButton>\n\n                        <IconButton onClick={toggleVideo}>\n                            { playerPlayState !== PlayerPlayStates.PLAYING ? <PlayCircleFilledWhiteIcon fontSize='large'/> : <PauseCircleFilledIcon fontSize='large'/> }\n                        </IconButton>\n\n                        <IconButton onClick={skipForward}>\n                            <Forward10Icon fontSize='large'/>\n                        </IconButton>\n\n                        <IconButton onClick={stopVideo}>\n                            <StopIcon fontSize='large'/>\n                        </IconButton>\n\n                        <a href={player?.getVideoUrl()} target=\"_blank\">\n                            <IconButton size='medium'>\n                                <YouTubeIcon fontSize='large'/>\n                            </IconButton>\n                        </a>\n\n                    </div>\n\n                </div>\n\n                <div className=\"chat-wrapper\">\n                    <UserContext.Consumer>\n                        {(value) => (\n                            <Chat user={value?.user}/>\n                        )}\n                    </UserContext.Consumer>\n                </div>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}